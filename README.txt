###############
# intro
###############

App with a front-end and back-end that can send notifications to the client.
The back-end is an express server.

###############
# dir structure
###############

app.js
    contains express server, it's configuration and handlers for requests.
    also contains the back-end of the push notification service.
public/index.html
    html file
public/js/index.js
    loads the service worker, registrate it and pushes it to the back-end.
public/js/service-worker.js
    the service worker.

###############
# installing
###############

npm install

###############
# configuration
###############

The app is partially configurated at the start and public and private keys
have already been added. After a client side subscription is created
(when the page is run for the first time) a subscription is created and needs
to be hard coded in the back-end (app.js).

All static files (in dir public) need to be added to "app.use()" in app.js,
otherwise the following error occures (on client side):
DOMException: The operation is insecure

Vapidkeys can be generated by running "create-vipid-keys.js". This will
print a json object that can be copyed in app.js to set the vapiddetail of the
webpush in app.js. The public vapid key also needs to be added to the client
(index.js). This only needs to be done once and is configured from the start.

###############
# running server
###############

npm start

###############
# notes
###############

# port
Default the server is running on localhost:5000

# permissions
Permission for notification is need otherwise the notification is blocked by
the browser

# service worker
The first time the client is run the service worker will be installed on the
brower and stays there unless deleted. Removing the service worker can be done
by clicking the unsubscribe button or by opening developer tools and looking
with Application -> Service Workers.

The cache needs to be cleared for the new service-worker to appear otherwise
the old service worker is loaded again.

###############
# Usefull Links
###############

# github
https://github.com/web-push-libs/web-push

# mozilla
https://developer.mozilla.org/en-US/docs/Web/API/PushManager
https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription

# google
## Add push notifications to a web app
https://codelabs.developers.google.com/codelabs/push-notifications/#0

# youtube
## Push Notifications Using Node.js & Service Worker 
https://www.youtube.com/watch?v=HlYFW2zaYQM
## Web Push Notifications - End to End implementation 
https://www.youtube.com/watch?v=2zHqTjyfIY8

# other
## Codelab: Build a push notification server
https://web.dev/push-notifications-server-codelab/
## A beginnerâ€™s guide to Service Workers
https://medium.com/samsung-internet-dev/a-beginners-guide-to-service-workers-f76abf1960f6
## Using VAPID with WebPush
https://blog.mozilla.org/services/2016/04/04/using-vapid-with-webpush/
