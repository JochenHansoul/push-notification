###############
# intro
###############

App with a front-end and back-end that can send notifications to the client.
The back-end is an express server.

###############
# dir structure
###############

app.js
    contains express server, it's configuration and handlers for requests.
    also contains the back-end of the push notification service.
public/index.html
    html file
public/js/index.js
    loads the service worker, registrate it and pushes it to the back-end.
public/js/service-worker.js
    the service worker.

###############
# installing
###############

npm install

###############
# configuration
###############

(The app is configurated at the start and public and private keys have already
been added.)

All static files (in dir public) need to be added to "app.use()" in app.js,
otherwise the following error occures (on client side):
DOMException: The operation is insecure

Vapidkeys can be generated by running "create-vipid-keys.js". This will
print a json object that can be copyed in app.js to set the vapiddetail of the
webpush in app.js. This only needs to be done once.

The public vapid key also needs to be added to service-worker.js

###############
# running server
###############

npm start

###############
# notes
###############

# port
Default the server is running on localhost:5000

# permissions
Permission for notification is need otherwise the notification is blocked by
the browser

# service worker
The first time the client is run the service worker will be installed on the
brower and stays there unless deleted. Removing the service worker can be done
by opening developer tools and looking with Application -> Service Workers.

The states of the service worker are:
register.installing     upon first installation
register.active         after it is installed
register.waiting        probably when it is in a waiting state

The cache needs to be cleared for the new service-worker to appear otherwise
the old service worker is loaded again.
When updating the title of the of the push notification the server needs to be
rerun.

###############
# Usefull Links
###############

# github
https://github.com/web-push-libs/web-push

# mozilla
https://developer.mozilla.org/en-US/docs/Web/API/PushManager
https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription

# google
## Add push notifications to a web app
https://codelabs.developers.google.com/codelabs/push-notifications/#0

# youtube
## Push Notifications Using Node.js & Service Worker 
https://www.youtube.com/watch?v=HlYFW2zaYQM
## Web Push Notifications - End to End implementation 
https://www.youtube.com/watch?v=2zHqTjyfIY8

# other
## A beginnerâ€™s guide to Service Workers
https://medium.com/samsung-internet-dev/a-beginners-guide-to-service-workers-f76abf1960f6
